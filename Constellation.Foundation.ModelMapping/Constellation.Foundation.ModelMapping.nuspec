<?xml version="1.0"?>
<package >
  <metadata>
	<id>$id$</id>
	<version>$version$</version>
	<title>$title$</title>
	<authors>Richard J. Cabral</authors>
	<owners>Richard J. Cabral</owners>
	<projectUrl>https://github.com/sitecorerick/constellation-sitecore9</projectUrl>
	<requireLicenseAcceptance>false</requireLicenseAcceptance>
	<summary>Sitecore Helix library to enhance MVC development in Sitecore.</summary>
	<description>
Constellation is a collection of utilities for .NET CMS implementers.
		
The Foundation.ModelMapping library is inspired by AutoMapper and is designed to provide a quick, non-ORM method of
mapping Sitecore Items to ViewModels. String properties on your ViewModel will be mapped to FieldRendered values from fields with the 
same names. Integer and DateTime property types can also be handled automatically, although you will not get page editor support
for these types. There are a number of Attributes that you can assign to your ViewModel's properties to change the behavior of the Mapper.

Usage: TModel viewModel = ModelMapper.MapItemToNew&lt;TModel&gt;(sourceItem);
Or: TModel viewmodel = item.MapToNew&lt;TModel&gt;();
Or: ModelMapper.MapTo(item, model);

Constraints:
- Your ViewModel must have a public, parameterless constructor.
- Only Writable, Public Instance properties will be mapped.
- Within Sitecore, your field names can be human-legible. ModelMapper will attempt to convert the field name to a valid Property name. Simpler names work best. 
You can use the Field's Display Name for better human legibility and keep the Field's actual name closer to a legit C# entity name.

The following Model properties are mapped to Item properties rather than Item fields:
- ID - Maps to the Item.ID - Make sure you use Sitecore.Data.ID as the property type.
- Name - Maps to the Item.Name 
- DisplayName - Maps to Item.DisplayName
- Url - Should be a string, not a Uri. Causes the current context LinkManager to generate a Url for the Item.
- Parent - Maps to the ViewModel you provide based on the Item.Parent.

Support for XML Field Attributes
- ImageField.Alt - use Model.FieldNameAlt
- ImageField.Height - use Model.FieldNameHeight
- GeneralLink.Target - use Model.FieldNameTarget
- etc.

Support for LinkField.TargetItem - use Model.FieldNameTargetItem and supply a class with public properties and a parameterless constructor.
Support for MultilistField.GetItems - use Model.FieldName and supply a generic ICollection&lt;T&gt; where "T" is new() and has properties you can map.

Now with the ability to map ICollection&lt;Item&gt; to ICollection&lt;TModel&gt;

Extensible! See the Constellation.Foundation.ModelMapping.config file to change the way Fields are processed.

Configured for use with Sitecore 9.0.
Requires Sitecore 9.0 NuGet packages, available here: https://sitecore.myget.org/F/sc-packages/api/v3/index.json
	</description>
	<releaseNotes>Now with support for GeneralLink.Class attribute mapping.</releaseNotes>
	<copyright>Copyright 2017</copyright>
	<tags>Sitecore,  Sitecore Helix, Sitecore Habitat, Sitecore SXA, Sitecore Foundation, Sitecore Mvc</tags>
  </metadata>
</package>